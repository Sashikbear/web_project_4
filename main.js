!function(){"use strict";class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_resetForm(){this._inputList.forEach((e=>{this._hideInputError(e)}))}resetValidation(){this._toggleButtonState(),this._resetForm()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,r){let{data:n,handleCardClick:o,handleDeleteCard:i,handleLikeButton:a}=e;t(this,"removeCardFromDOM",(()=>{this._element.remove(),this._element=null})),t(this,"handleLikeCard",(e=>{this._likes=e,this._renderLikes()})),this._name=n.name,this._link=n.link,this._id=n._id,this._ownerId=n.owner._id,this._userId=r,this._likes=n.likes,this._cardSelector=s,this._handleCardClick=o,this._handleLikeButton=a,this._handleDeleteCard=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard(this._id))),this._likeButton.addEventListener("click",(()=>this._handleLikeButton(this._id))),this._cardImage.addEventListener("click",(()=>this._handleCardClick({name:this._name,src:this._link})))}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._likesCount.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add("button_active"):this._likeButton.classList.remove("button_active")}generateCard(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".button_type_like"),this._deleteButton=this._element.querySelector(".button_type_delete"),this._cardImage=this._element.querySelector(".card__image"),this._cardImageTitle=this._element.querySelector(".card__title"),this._likesCount=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._link,this._cardImageTitle.textContent=this._name,this._renderLikes(),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._element}}const r=document.querySelector(".popup__input_type_name"),n=document.querySelector(".popup__input_type_job"),o=document.querySelector(".button_type_edit"),i=document.querySelector(".button_type_add"),a=document.querySelector(".profile__image-overlay");function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class c{constructor(e){l(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),l(this,"_handleMouseDownClose",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("button_type_close"))&&this.close()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleMouseDownClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleMouseDownClose)}}var h=class extends c{constructor(e,t,s){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".popup__form"),this._button=this._popupElement.querySelector(".popup__button"),this._buttonText=s,this._inputs=Array.from(this._popupForm.querySelectorAll(".popup__input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}formReset(){this._popupForm.reset()}showLoading(){this._button.textContent="Saving..."}hideLoading(){this._button.textContent=this._buttonText}setEventListeners(){this._popupForm.addEventListener("submit",(()=>this._handleFormSubmit(this._getInputValues())))}};const u={};var _;_={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(_.formSelector)).forEach((t=>{const s=new e(_,t),r=t.getAttribute("name");u[r]=s,s.enableValidation()}));const d=new class{constructor(e){let{name:t,about:s,avatar:r,userNameSelector:n,userAboutSelector:o,avatarSelector:i}=e;this._name=t,this._about=s,this._avatar=r,this._userNameElement=document.querySelector(n),this._userAboutElement=document.querySelector(o),this._avatarElement=document.querySelector(i)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent}}setAvatar(e){let{avatar:t}=e;this._avatarElement.style.backgroundImage="url(".concat(t||this._avatar,")")}setUserInfo(e){let{name:t,about:s}=e;this._userNameElement.textContent=t||this._name,this._userAboutElement.textContent=s||this._about}}({userNameSelector:".profile__user-name",userAboutSelector:".profile__user-job",avatarSelector:".profile__image"}),p=new h(".popup_type_profile",(function(e){p.showLoading(),g.editProfile(e).then((e=>{d.setUserInfo(e),p.formReset(),p.close()})).catch((e=>{console.log("Error: ".concat(e))})).finally((()=>{p.hideLoading()}))}),"Save"),m=new h(".popup_type_add-card",(function(e){let{name:t,url:s}=e;m.showLoading();const r={name:t,link:s};g.createCard(r).then((e=>{f.addItem(e),m.formReset(),m.close()})).catch((e=>{console.log("Error: ".concat(e))})).finally((()=>{m.hideLoading()}))}),"Create"),b=new h(".popup_type_avatar",(function(e){b.showLoading(),g.editAvatar(e).then((e=>{d.setAvatar(e),b.formReset(),b.close()})).catch((e=>{console.log("Error: ".concat(e))})).finally((()=>{b.hideLoading()}))}),"Save"),E=new class extends c{constructor(e){super(e),this._imageZoom=this._popupElement.querySelector(".popup__image"),this._imageZoomTitle=this._popupElement.querySelector(".popup__title")}open(e){let{link:t,name:s}=e;super.open(),this._imageZoom.src=t,this._imageZoom.alt="Image of ".concat(s),this._imageZoomTitle.textContent=s}}(".popup_type_zoom-card"),v=new class extends c{constructor(e){super(e),this._button=this._popupElement.querySelector(".popup__button")}setAction(e){this._handleSubmit=e}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}showLoading(){this._button.textContent="Deleting..."}hideLoading(){this._button.textContent="Yes"}}(".popup_type_delete");p.setEventListeners(),m.setEventListeners(),v.setEventListeners(),b.setEventListeners(),o.addEventListener("click",(function(){p.open();const{name:e,about:t}=d.getUserInfo();r.value=e,n.value=t,u["form-profile"].resetValidation()}));const f=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(e){e.forEach((e=>{this.addItem(e)}))}}({renderer:e=>{const t=new s({data:e,handleCardClick:()=>{E.open({link:e.link,name:e.name})},handleDeleteCard:e=>{v.open(),v.setAction((()=>{v.showLoading(),g.deleteCard(e).then((()=>{t.removeCardFromDOM(),v.close()})).catch((e=>{console.log("Error: ".concat(e))})).finally((()=>{v.hideLoading()}))}))},handleLikeButton:e=>{t.isLiked()?g.unlikeCard(e).then((e=>{t.handleLikeCard(e.likes)})).catch((e=>{console.log("Error: ".concat(e))})):g.likeCard(e).then((e=>{t.handleLikeCard(e.likes)})).catch((e=>{console.log("Error: ".concat(e))}))}},"#card",y);return t.generateCard()}},".cards__card-grid");i.addEventListener("click",(function(){m.open(),u["form-add-card"].resetValidation()}));const g=new class{constructor(e){let{baseUrl:t,headers:s}=e;var r,n;n=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))),(r="_customFetch")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._baseUrl=t,this._headers=s}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}createCard(e){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}editProfile(e){let{name:t,about:s}=e;return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})})}editAvatar(e){let{avatar:t}=e;return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:t})})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}unlikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"0d380c06-5bf9-4f9e-b38f-f8e4b1728003","Content-Type":"application/json"}});let y;Promise.all([g.getUserInfo(),g.getInitialCards()]).then((e=>{let[t,s]=e;y=t._id,d.setUserInfo({name:t.name,about:t.about}),d.setAvatar({avatar:t.avatar}),f.renderItems(s.reverse())})).catch((e=>{console.log("Error: ".concat(e))})),a.addEventListener("click",(function(){b.open(),u["form-avatar"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,