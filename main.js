!function(){"use strict";class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_resetForm(){this._inputList.forEach((e=>{this._hideInputError(e)}))}resetValidation(){this._toggleButtonState(),this._resetForm()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s){let{data:n,handleCardClick:r}=e;t(this,"_handleDeleteButton",(()=>{this._element.remove(),this._element=null})),t(this,"_handleLikeButton",(()=>{this._likeButton.classList.toggle("button_active")})),this._name=n.name,this._link=n.link,this._cardSelector=s,this._handleCardClick=r,this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".button_type_like"),this._deleteButton=this._element.querySelector(".button_type_delete"),this._cardImage=this._element.querySelector(".card__image"),this._cardImageTitle=this._element.querySelector(".card__title")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._deleteButton.addEventListener("click",this._handleDeleteButton),this._likeButton.addEventListener("click",this._handleLikeButton),this._cardImage.addEventListener("click",(()=>this._handleCardClick({name:this._name,src:this._link})))}generateCard(){return this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._link,this._cardImageTitle.textContent=this._name,this._element}}const n=document.querySelector(".popup__input_type_name"),r=document.querySelector(".popup__input_type_job"),o=document.querySelector(".button_type_edit"),i=document.querySelector(".button_type_add"),l=[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}].reverse();class a{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("button_type_close"))&&this.close()}))}}var u=class extends a{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".popup__form"),this._inputs=Array.from(this._popupForm.querySelectorAll(".popup__input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._popupForm.reset()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>this._handleFormSubmit(this._getInputValues())))}};const c={};var _;_={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(_.formSelector)).forEach((t=>{const s=new e(_,t),n=t.getAttribute("name");c[n]=s,s.enableValidation()}));const p=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._userNameSelector=t,this._userJobSelector=s,this._userNameElement=document.querySelector(t),this._userJobElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,job:this._userJobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._userNameElement.textContent=t,this._userJobElement.textContent=s}}({userNameSelector:".profile__user-name",userJobSelector:".profile__user-job"}),d=new u(".popup_type_profile",(function(e){p.setUserInfo(e),d.close()})),m=new u(".popup_type_add-card",(function(e){let{name:t,url:s}=e;const n={name:t,link:s};E.addItem(n),m.close()})),h=new class extends a{constructor(e){super(e),this._imageZoom=this._popupElement.querySelector(".popup__image"),this._imageZoomTitle=this._popupElement.querySelector(".popup__title")}open(e){let{link:t,name:s}=e;super.open(),this._imageZoom.src=t,this._imageZoom.alt="Image of ".concat(s),this._imageZoomTitle.textContent=s}}(".popup_type_zoom-card");d.setEventListeners(),m.setEventListeners(),h.setEventListeners(),o.addEventListener("click",(function(){d.open();const{name:e,job:t}=p.getUserInfo();n.value=e,r.value=t,c["form-profile"].resetValidation()}));const E=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderedItems=s,this._renderer=n,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(){this._renderedItems.forEach((e=>{this.addItem(e)}))}}({items:l,renderer:e=>new s({data:e,handleCardClick:()=>{h.open({link:e.link,name:e.name})}},"#card").generateCard()},".cards__card-grid");E.renderItems(),i.addEventListener("click",(function(){m.open(),c["form-add-card"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,