!function(){"use strict";class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_resetForm(){this._inputList.forEach((e=>{this._hideInputError(e)}))}resetValidation(){this._toggleButtonState(),this._resetForm()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,r){let{data:n,handleCardClick:i,handleDeleteCard:o,handleLikeButton:a}=e;t(this,"removeCardFromDOM",(()=>{this._element.remove(),this._element=null})),t(this,"handleLikeCard",(e=>{this._likes=e,this._likesCount.textContent=this._likes.length,this._likeButton.classList.toggle("button_active")})),this._name=n.name,this._link=n.link,this._id=n._id,this._ownerId=n.owner._id,this._userId=r,this._likes=n.likes,this._cardSelector=s,this._handleCardClick=i,this._handleLikeButton=a,this._handleDeleteCard=o,this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".button_type_like"),this._deleteButton=this._element.querySelector(".button_type_delete"),this._cardImage=this._element.querySelector(".card__image"),this._cardImageTitle=this._element.querySelector(".card__title"),this._likesCount=this._element.querySelector(".card__like-counter")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard(this._id))),this._likeButton.addEventListener("click",(()=>this._handleLikeButton(this._id))),this._cardImage.addEventListener("click",(()=>this._handleCardClick({name:this._name,src:this._link})))}isLiked(){return this._likes.some((e=>e._id===this._userId))}generateCard(){return this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._link,this._cardImageTitle.textContent=this._name,this._likesCount.textContent=this._likes.length,this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this.isLiked()&&this.handleLikeCard(this._likes),this._element}}const r=document.querySelector(".popup__input_type_name"),n=document.querySelector(".popup__input_type_job"),i=document.querySelector(".button_type_edit"),o=document.querySelector(".button_type_add"),a=document.querySelector(".profile__image-overlay");class l{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("button_type_close"))&&this.close()}))}}var u=class extends l{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".popup__form"),this._button=this._popupElement.querySelector(".popup__button"),this._inputs=Array.from(this._popupForm.querySelectorAll(".popup__input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}processing(){this._button.textContent="Saving..."}open(){"create"===this._button.id?this._button.textContent="Create":this._button.textContent="Save",super.open()}close(){super.close(),this._popupForm.reset()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>this._handleFormSubmit(this._getInputValues())))}};const c={};var h;h={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(h.formSelector)).forEach((t=>{const s=new e(h,t),r=t.getAttribute("name");c[r]=s,s.enableValidation()}));const _=new class{constructor(e){let{name:t,about:s,avatar:r,userNameSelector:n,userAboutSelector:i,avatarSelector:o}=e;this._name=t,this._about=s,this._avatar=r,this._userNameElement=document.querySelector(n),this._userAboutElement=document.querySelector(i),this._avatarElement=document.querySelector(o)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent}}setUserInfo(e){let{name:t,about:s,avatar:r}=e;this._userNameElement.textContent=t||this._name,this._userAboutElement.textContent=s||this._about,this._avatarElement.style.backgroundImage="url(".concat(r,")")||0}}({userNameSelector:".profile__user-name",userAboutSelector:".profile__user-job",avatarSelector:".profile__image"}),d=new u(".popup_type_profile",(function(e){d.processing(),C.editProfile(e).then((e=>{_.setUserInfo(e)})).finally((()=>{d.close()}))})),p=new u(".popup_type_add-card",(function(e){let{name:t,url:s}=e;p.processing();const r={name:t,link:s};C.createCard(r).then((e=>{v.addItem(e)})).finally((()=>{p.close()}))})),m=new u(".popup_type_avatar",(function(e){m.processing(),C.editAvatar(e).then((e=>{_.setUserInfo(e)})).finally((()=>{m.close()}))})),b=new class extends l{constructor(e){super(e),this._imageZoom=this._popupElement.querySelector(".popup__image"),this._imageZoomTitle=this._popupElement.querySelector(".popup__title")}open(e){let{link:t,name:s}=e;super.open(),this._imageZoom.src=t,this._imageZoom.alt="Image of ".concat(s),this._imageZoomTitle.textContent=s}}(".popup_type_zoom-card"),E=new class extends l{constructor(e){super(e),this._button=this._popupElement.querySelector(".popup__button")}setAction(e){this._submitHandler=e}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()}))}processing(){this._button.textContent="Deleting..."}open(){this._button.textContent="Yes",super.open()}}(".popup_type_delete");d.setEventListeners(),p.setEventListeners(),b.setEventListeners(),E.setEventListeners(),m.setEventListeners(),i.addEventListener("click",(function(){d.open();const{name:e,about:t}=_.getUserInfo();r.value=e,n.value=t,c["form-profile"].resetValidation()}));const v=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(e){e.forEach((e=>{this.addItem(e)}))}}({renderer:e=>{const t=new s({data:e,handleCardClick:()=>{b.open({link:e.link,name:e.name})},handleDeleteCard:e=>{E.open(),E.setAction((()=>{E.processing(),C.deleteCard(e).finally((()=>{t.removeCardFromDOM(),E.close()}))}))},handleLikeButton:e=>{t.isLiked()?C.unlikeCard(e).then((e=>{t.handleLikeCard(e.likes)})):C.likeCard(e).then((e=>{t.handleLikeCard(e.likes)}))}},"#card",y);return t.generateCard()}},".cards__card-grid");o.addEventListener("click",(function(){p.open(),c["form-add-card"].resetValidation()}));const C=new class{constructor(e){let{baseUrl:t,headers:s}=e;var r,n;n=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log("Error: ".concat(e))})),(r="_customFetch")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._baseUrl=t,this._headers=s}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}createCard(e){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}editProfile(e){let{name:t,about:s}=e;return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})})}editAvatar(e){let{avatar:t}=e;return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:t})})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}unlikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"0d380c06-5bf9-4f9e-b38f-f8e4b1728003","Content-Type":"application/json"}});let y;Promise.all([C.getUserInfo(),C.getInitialCards()]).then((e=>{let[t,s]=e;y=t._id,_.setUserInfo({name:t.name,about:t.about,avatar:t.avatar}),v.renderItems(s.reverse())})),a.addEventListener("click",(function(){m.open(),c["form-avatar"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,